<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="exp_api_impl-suite.xml" />
	<munit:test name="exp_api_implSub_Flow-test" doc:id="92caeef4-bc8d-48f1-b253-9b9e43396ca7" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Request" doc:id="7696deaf-675c-416e-a9bb-235e25d0690d" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d1a74aed-0d65-4b57-9b9c-6d7560971c32" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json  --- readUrl('classpath://expapiimplSubFlowtest\mock_payload.dwl')]" mediaType="application/json " encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://expapiimplSubFlowtest\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://expapiimplSubFlowtest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="93f6ded3-543f-4fa4-b650-e7c5268ebbe1" >
				<munit:payload value="#[readUrl('classpath://expapiimplSubFlowtest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://expapiimplSubFlowtest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://expapiimplSubFlowtest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to exp_api_implSub_Flow" doc:id="0b801429-8b1b-4579-880d-bd3823a69f24" name="exp_api_implSub_Flow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="08114e7f-eeb0-4893-bf10-7d7bd8f55131" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import expapiimplSubFlowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="exp_api_implSub_Flow1-test" doc:id="029a2897-aba6-4b7c-98f9-bbeb263ec072" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Request" doc:id="8c8cb287-7e54-4dff-b871-f9b07908d62e" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="516aa43c-6d91-4d21-8520-053b7a5e49f5" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java  --- readUrl('classpath://expapiimplSubFlow1test\mock_payload.dwl')]" mediaType="application/java " encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://expapiimplSubFlow1test\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://expapiimplSubFlow1test\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="8c5d16b2-f746-4537-be98-7ebdf81a08c1" >
				<munit:payload value="#[output application/json  --- readUrl('classpath://expapiimplSubFlow1test\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://expapiimplSubFlow1test\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://expapiimplSubFlow1test\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to exp_api_implSub_Flow1" doc:id="afa4ba5c-8b5a-4565-ac95-df73a9105543" name="exp_api_implSub_Flow1"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="ace0686c-6686-4a95-bf9f-7186bd531409" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import expapiimplSubFlow1test::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
